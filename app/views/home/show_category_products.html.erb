<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= @category.ten_danhmuc %></title>
     <link rel="stylesheet" href="/assets/timkiem.css">
    <style>
        /* Navbar styles từ index2 */
        .nav-item.dropdown {
            position: relative;
        }
        html {
        scroll-behavior: smooth; /* Thêm hiệu ứng cuộn mượt */
    }

        .dropdown-content {
            display: none;
            position: absolute;
            top: 100%;
            left: 0;
            background: rgba(255, 255, 255, 0.95);
            min-width: 200px;
            box-shadow: 0 8px 16px rgba(0,0,0,0.1);
            border-radius: 4px;
            z-index: 1000; /* Đảm bảo hiển thị trên slider */
            padding: 8px 0;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
        }

        .nav-item.dropdown:hover .dropdown-content {
            display: block;
            opacity: 1;
            visibility: visible;
        }

        .dropdown-item {
            display: block;
            padding: 12px 20px;
            color: #333;
            text-decoration: none;
            font-size: 14px;
            transition: all 0.2s ease;
            white-space: nowrap;
        }

        .dropdown-item:hover {
            background: rgba(78, 115, 223, 0.1);
            color: #4e73df;
            padding-left: 25px;
        }

        /* Thêm mũi tên xuống cho menu SẢN PHẨM */
        .nav-item.dropdown > .navbar-item::after {
            content: '▼';
            font-size: 10px;
            margin-left: 5px;
            display: inline-block;
            transition: transform 0.3s ease;
        }

        .nav-item.dropdown:hover > .navbar-item::after {
            transform: rotate(180deg);
        }

        /* Animation cho dropdown */
        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .dropdown-content {
            animation: fadeIn 0.3s ease forwards;
        }

        .navbar {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            background: white;
            z-index: 999;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        /* Category Header styles từ products.css */
        .category-header {
            background: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6));
            color: white;
            text-align: center;
            padding: 100px 0 40px;
            margin-top: 80px;
            margin-bottom: 40px;
        }

        .category-header h1 {
            font-size: 2.5em;
            margin-bottom: 15px;
        }

        .category-header p {
            font-size: 1.1em;
            opacity: 0.9;
            max-width: 800px;
            margin: 0 auto;
        }

        /* Products Grid styles kết hợp từ product_detail.css */
        .products-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            display: grid;
            grid-template-columns: repeat(auto-fit, 313.17px);
            gap: 30px;
            justify-content: center;
        }

        .product-card {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            overflow: hidden;
            position: relative;
            transition: all 0.3s ease;
            width: 313.17px;
            height: 394.57px;
        }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 16px rgba(0,0,0,0.1);
        }

        .product-image {
            position: relative;
            padding-top: 75%;
            overflow: hidden;
        }

        .product-image img {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .product-info {
            padding: 15px;
            text-align: center;
        }

        .product-info h3 {
            margin: 0 0 10px;
            font-size: 1.1em;
            color: #333;
        }

        .price {
            color: #e74a3b;
            font-weight: bold;
            font-size: 1.1em;
            margin: 10px 0;
        }

        .action-buttons {
            position: absolute;
            bottom: -100%;
            left: 0;
            right: 0;
            padding: 15px;
            display: flex;
            justify-content: center;
            gap: 10px;
            transition: all 0.3s ease;
            opacity: 0;
            visibility: hidden;
        }

        .product-card:hover .action-buttons {
            bottom: 0;
            opacity: 1;
            visibility: visible;
            animation: fadeIn 0.3s ease forwards;
        }

        .btn {
            padding: 8px 16px;
            border-radius: 4px;
            text-decoration: none;
            color: white;
            font-size: 14px;
            transition: all 0.2s ease;
            border: 1px solid white;
        }

        .add-to-cart {
            background-color: #4caf50;
            border-radius: 20px;
        }
        .buy-now {
            background-color: #007bff;
            border-radius: 20px;
        }
       

        .add-to-cart:hover, .buy-now:hover {
            background: rgba(0, 0, 0, 0.2);
            padding-left: 20px;
        }

        .view-details {
            display: inline-block;
            color: white;
            text-decoration: none;
            font-size: 14px;
            padding: 8px 0;
            position: relative;
            transition: all 0.2s ease;
        }

        .view-details:hover {
            color: #f8f9fa;
        }

        .view-details::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 50%;
            width: 0;
            height: 2px;
            background: white;
            transition: all 0.3s ease;
            transform: translateX(-50%);
        }

        .view-details:hover::after {
            width: 100%;
        }

        /* Animation */
        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .products-container {
                margin: 1rem;
                padding: 1rem;
                grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            }

            .category-header h1 {
                font-size: 2rem;
            }

            .product-info h3 {
                font-size: 1.1rem;
            }

            .price {
                font-size: 1.2rem;
            }
        }

        .cart-container {
            display: flex;
            align-items: center;
            margin-left: 20px;
            position: relative;
        }

        .cart-icon {
            font-size: 24px;
            color: #333;
            text-decoration: none;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .cart-count {
            background: #e74a3b;
            color: white;
            border-radius: 50%;
            padding: 2px 6px;
            font-size: 12px;
            position: absolute;
            top: -8px;
            right: -8px;
        }

        /* CSS cho user menu */
        .nav-item.user-menu {
            position: relative;
            margin-left: 20px;
        }

        .user-icon {
            font-size: 20px;
            color: #333;
            padding: 5px;
        }

        .user-dropdown {
            display: none;
            position: absolute;
            right: 0;
            top: 100%;
            background: rgba(255, 255, 255, 0.95);
            min-width: 200px;
            box-shadow: 0 8px 16px rgba(0,0,0,0.1);
            border-radius: 4px;
            z-index: 1000;
            padding: 8px 0;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
        }

        .nav-item.user-menu:hover .user-dropdown {
            display: block;
            opacity: 1;
            visibility: visible;
            animation: fadeIn 0.3s ease forwards;
        }

        .user-dropdown-item {
            display: block;
            padding: 12px 20px;
            color: #333;
            text-decoration: none;
            font-size: 14px;
            transition: all 0.2s ease;
        }

        .user-dropdown-item:hover {
            background: rgba(78, 115, 223, 0.1);
            color: #4e73df;
            padding-left: 25px;
        }

        .user-dropdown-item[type="submit"] {
            border: none;
            background: none;
            width: 100%;
            text-align: left;
            cursor: pointer;
            font-family: inherit;
        }
         /* Modal styles */
    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.5);
    }

    .modal-content {
        background-color: #fefefe;
        margin: 15% auto;
        padding: 20px;
        border-radius: 8px;
        width: 400px;
        position: relative;
        animation: modalSlideIn 0.3s ease;
    }

    @keyframes modalSlideIn {
        from {
            transform: translateY(-100px);
            opacity: 0;
        }
        to {
            transform: translateY(0);
            opacity: 1;
        }
    }

    .close {
        position: absolute;
        right: 15px;
        top: 10px;
        font-size: 24px;
        font-weight: bold;
        color: #666;
        cursor: pointer;
    }

    .close:hover {
        color: #000;
    }

    .buy-now-form {
        padding: 15px;
    }

    .product-preview {
        display: flex;
        gap: 20px;
        margin-bottom: 20px;
        padding-bottom: 15px;
        border-bottom: 1px solid #eee;
    }

    .product-preview img {
        width: 100px;
        height: 100px;
        object-fit: cover;
        border-radius: 4px;
    }

    .product-details {
        flex: 1;
    }

    .product-details h3 {
        margin: 0 0 10px;
        font-size: 18px;
        color: #333;
    }

    .modal-price {
        color: #e53935;
        font-size: 18px;
        font-weight: 600;
    }

    .quantity-selector {
        margin: 20px 0;
    }

    .quantity-controls {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-top: 8px;
    }

    .quantity-controls button {
        width: 30px;
        height: 30px;
        border: 1px solid #ddd;
        background: #fff;
        border-radius: 4px;
        cursor: pointer;
        font-size: 16px;
    }

    .quantity-controls button:hover {
        background: #f5f5f5;
    }

    .quantity-controls input {
        width: 50px;
        height: 30px;
        text-align: center;
        border: 1px solid #ddd;
        border-radius: 4px;
    }

    .buy-now-button {
        width: 100%;
        padding: 12px;
        background: #4CAF50;
        color: white;
        border: none;
        border-radius: 4px;
        font-size: 16px;
        font-weight: 500;
        cursor: pointer;
        transition: background 0.2s;
    }

    .buy-now-button:hover {
        background: #45a049;
    }
    </style>
</head>
<body>
    <!-- Copy navbar từ index2 -->
    <nav class="navbar">
        <div class="navbar-container">
            <div class="slider-logo">
                <img src="<%= image_path('logo.png') %>" alt="Logo">
            </div>
            <!-- Search Bar -->
            <div class="search-container">
                <%= form_tag(search_products_path, method: :get, class: 'search-form') do %>
                    <%= text_field_tag :query, params[:query], class: 'search-input', placeholder: 'Tìm kiếm...' %>
                    <button type="submit" class="search-button">
                        <i class="fas fa-search"></i>
                    </button>
                <% end %>
            </div>
        
            <ul class="navbar-list">
                 <li><a href="<%= index2_path %>" class="navbar-item">TRANG CHỦ</a></li>
                <li><a href="/gioi_thieu" class="navbar-item">GIỚI THIỆU</a></li>
                <li class="nav-item dropdown">
                    <a href="#" class="navbar-item">SẢN PHẨM</a>
                    <div class="dropdown-content">
                        <% Danhmucsanpham.all.each do |danhmuc| %>
                            <%= link_to danhmuc.ten_danhmuc, show_category_products_path(id: danhmuc.id), class: 'dropdown-item' %>
                        <% end %>
                    </div>
                </li>
                <li><a href="#" class="navbar-item">DỊCH VỤ</a></li>
                <li><a href="#" class="navbar-item">KIẾN THỨC CHĂN NUÔI</a></li>
                <li><a href="#lienhe" class="navbar-item scroll-to-footer">LIÊN HỆ</a></li>
                <li class="nav-item user-menu">
                    <a href="#" class="navbar-item user-icon">
                        <i class="fas fa-user"></i>
                    </a>
                    <div class="user-dropdown">
                        <% if logged_in? %>
                            <%= link_to 'Thông tin khách hàng', '#', class: 'user-dropdown-item' %>
                            <%= link_to 'Theo dõi đơn hàng', '#', class: 'user-dropdown-item' %>
                            <%= button_to 'Đăng xuất', 
                                dangxuat_path, 
                                method: :delete, 
                                data: { turbo_confirm: 'Bạn có chắc chắn muốn đăng xuất?' }, 
                                class: 'user-dropdown-item'
                            %>
                        <% else %>
                            <%= link_to 'Đăng nhập', dangnhap_path, class: 'user-dropdown-item' %>
                        <% end %>
                    </div>
                </li>
            </ul>
        </div>
    </nav>

    <div class="category-header">
        <h1><%= @category.ten_danhmuc %></h1>
        <p>Khám phá các sản phẩm chất lượng cao trong danh mục của chúng tôi</p>
    </div>

    <div class="products-container">
        <% @products.each do |product| %>
            <div class="product-card" data-product-id="<%= product.id %>">
                <div class="product-image">
                    <% if product.image_path.present? %>
                        <%= image_tag("/assets/#{product.image_path}") %>
                    <% else %>
                        <%= image_tag "default-product.jpg" %>
                    <% end %>
                   <div class="hover-buttons">
                       <button type="button" class="btn add-to-cart">
                                Thêm vào giỏ
                            </button>
                            <button onclick="showBuyNowForm(<%= product.id %>, '<%= product.name %>', '<%= asset_path(product.image_path) %>', <%= product.price %>)" class="btn buy-now">
                                Mua ngay
                            </button>
                     </div>
                </div>
                <div class="product-info">
                    <h3><%= product.name %></h3>
                    <p class="price"><%= number_to_currency(product.price, unit: 'đ', precision: 0, delimiter: '.') %></p>
                    <%= link_to 'Xem chi tiết', product_path(product), class: 'view-details' %>
                </div>
            </div>
        <% end %>
    </div>

    <!-- Copy footer từ index2 -->
    <div class="footer">
        
        <div class="footer-content">
            <div class="office-contact footer-section">
                <h3>Văn phòng liên hệ</h3>
                <p><strong>Hà Nội:</strong> Lô A2CN2 Cụm CN Từ Liêm, P.Phương Canh, Q.Nam Từ Liêm, TP.Hà Nội.
                    <span class="hotline"><a href="">Hotline: 19008198</a></span>
                </p>
                <p><strong>Hồ Chí Minh:</strong> Số 83 Lý Chiêu Hoàng, Phường 10, Quận 6, TP. Hồ Chí Minh.
                    <span class="hotline"><a href="">Hotline: (84-28) 5555 9999</a></span>
                </p>
            </div>
            <div class="centered-info">
                <h3>CÔNG TY TNHH II THÀNH VIÊN THÚ Y VIỆT </h3>
                <p>Email: <a href="mailto:info@thuyviet.com.vn">info@thuyviet.com.vn</a></p>
                <p><a href="">Hotline: 0909900000</a> - Tư vấn miễn phí</p>
            </div>
             <div id="lienhe" class="social-media footer-section">
                <h3>Liên hệ mạng xã hội</h3>
                <div class="social-icons">
                    <a href="" target="_blank" class="social-icon"><i class="fab fa-facebook"></i> Facebook</a>
                    <a href="" target="_blank" class="social-icon"><i class="fas fa-envelope"></i> Gmail</a>
                    <a href="" target="_blank" class="social-icon"><i class="fab fa-youtube"></i> YouTube</a>
                    <a href="" target="_blank" class="social-icon"><i class="fab fa-instagram"></i> Instagram</a>
                </div>
            </div>
        </div>
        <hr class="footer-divider">
        <p class="footer-bottom">© 2024 Thu y Viet. All rights reserved.</p>
    </div>

    <script>
      document.querySelectorAll('.dropdown-toggle').forEach(item => {
        item.addEventListener('click', event => {
            event.preventDefault(); // Ngăn chặn hành động mặc định
            const dropdownMenu = item.nextElementSibling; // Chọn menu tương ứng
            dropdownMenu.classList.toggle('show'); // Thay đổi class
        });
        });

        // Slider
        let currentSlide = 0;
        const slides = document.querySelectorAll(".slider-item");

        function showSlide(index) {
        slides.forEach((slide, i) => {
            slide.classList.toggle("active", i === index);
        });
        }

        function nextSlide() {
        currentSlide = (currentSlide + 1) % slides.length;
        showSlide(currentSlide);
        }

        function prevSlide() {
        currentSlide = (currentSlide - 1 + slides.length) % slides.length;
        }

        document.addEventListener("DOMContentLoaded", function () {
        showSlide(currentSlide);
        setInterval(nextSlide, 3000); // Tự động chuyển ảnh mỗi 3 giây
        });

        window.addEventListener('scroll', () => {
        const scrollTop = window.pageYOffset || document.documentElement.scrollTop; // Lấy vị trí cuộn hiện tại
        console.log(`Scroll Top: ${scrollTop}, Last Scroll Top: ${lastScrollTop}`); // Thêm log

        if (scrollTop > lastScrollTop) {
            // Nếu cuộn xuống
            navbar.style.top = '-80px'; // Ẩn thanh điều hướng
        } else {
            // Nếu cuộn lên
            navbar.style.top = '0'; // Hiện thanh điều hướng
        }

        lastScrollTop = scrollTop; // Cập nhật vị trí cuộn cuối cùng
        });
    </script>>

    <script>
        let lastScrollTop = 0;
        const navbar = document.querySelector('.navbar');

        window.addEventListener('scroll', () => {
            const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
            if (scrollTop > lastScrollTop) {
                navbar.style.top = '-80px';
            } else {
                navbar.style.top = '0';
            }
            lastScrollTop = scrollTop;
        });
    </script>
    <script>
    // ... JavaScript khác ...
      // Thêm code xử lý giỏ hàng
        document.addEventListener('DOMContentLoaded', function() {
            // Lấy số lượng hiện tại trong giỏ hàng
            let currentCartCount = parseInt(document.getElementById('cart-count')?.textContent || '0');

            // Xử lý sự kiện click "Thêm vào giỏ"
            document.querySelectorAll('.add-to-cart').forEach(button => {
                button.addEventListener('click', function(e) {
                    e.preventDefault();
                    
                    const productCard = this.closest('.product-card');
                    const productId = productCard.dataset.productId;

                    // Tăng số lượng ngay lập tức trước khi gửi request
                    currentCartCount += 1;
                    updateCartCountDisplay(currentCartCount);

                    fetch(`/cart/add/${productId}`, {
                        method: 'POST',
                        headers: {
                            'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content,
                            'Content-Type': 'application/json',
                            'Accept': 'application/json'
                        },
                        credentials: 'same-origin'
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Cập nhật lại số chính xác từ server (nếu cần)
                            currentCartCount = data.cart_count;
                            updateCartCountDisplay(currentCartCount);
                            
                            // Thông báo thành công
                            showNotification('Đã thêm vào giỏ hàng!');

                            // Delay 1 giây (1000ms) trước khi reload
                            setTimeout(() => {
                                window.location.reload();
                            }, 1000);
                        } else {
                            // Nếu có lỗi, giảm lại số lưng
                            currentCartCount -= 1;
                            updateCartCountDisplay(currentCartCount);
                            showNotification(data.message || 'Có lỗi xảy ra', 'error');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        // Nếu có lỗi, giảm lại số lượng
                        currentCartCount -= 1;
                        updateCartCountDisplay(currentCartCount);
                        showNotification('Có lỗi xảy ra khi thêm vào giỏ hàng', 'error');
                    });
                });
            });

            // Hàm cập nhật hiển thị số lượng giỏ hàng
            function updateCartCountDisplay(count) {
                const cartCount = document.getElementById('cart-count');
                if (cartCount) {
                    cartCount.textContent = count;
                    // Thêm hiệu ứng
                    cartCount.classList.add('update-animation');
                    setTimeout(() => {
                        cartCount.classList.remove('update-animation');
                    }, 300);
                }
            }

            // Hàm hiển thị thông báo
            function showNotification(message, type = 'success') {
                const notification = document.createElement('div');
                notification.className = `notification ${type}`;
                notification.textContent = message;
                document.body.appendChild(notification);

                // Xóa thông báo sau 2 giây
                setTimeout(() => {
                    notification.remove();
                }, 2000);
            }
        });

        function addToCart(productId, productName, productPrice, productImage) {
            // Lấy token CSRF
            const csrfToken = document.querySelector('meta[name="csrf-token"]').content;
            
            fetch('/cart/add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-Token': csrfToken
                },
                body: JSON.stringify({
                    id: productId,
                    name: productName,
                    price: productPrice,
                    image_path: productImage
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Kiểm tra sự tồn tại của phần tử trước khi cập nhật
                    const cartCount = document.querySelector('.cart-count');
                    if (cartCount) {
                        cartCount.textContent = data.cart_count;
                        cartCount.classList.add('pulse');
                        setTimeout(() => cartCount.classList.remove('pulse'), 500);
                    }
                    
                    showNotification('Đã thêm vào giỏ hàng!', 'success');
                } else {
                    showNotification(data.message || 'Có lỗi xảy ra', 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showNotification('Có lỗi xảy ra khi thêm vào giỏ hàng', 'error');
            });
        }

        function showNotification(message, type = 'success') {
            const notification = document.createElement('div');
            notification.className = `notification ${type}`;
            notification.textContent = message;
            
            // Style cho notification
            Object.assign(notification.style, {
                position: 'fixed',
                top: '20px',
                right: '20px',
                padding: '15px 25px',
                borderRadius: '5px',
                backgroundColor: type === 'success' ? '#4CAF50' : '#f44336',
                color: 'white',
                zIndex: '1000',
                animation: 'slideIn 0.5s ease-out'
            });
            
            document.body.appendChild(notification);
            
            setTimeout(() => notification.remove(), 3000);
        }

        // Thêm CSS cho animation
        const style = document.createElement('style');
        style.textContent = `
            .pulse {
                animation: pulse 0.5s ease-in-out;
            }

            @keyframes pulse {
                0% { transform: scale(1); }
                50% { transform: scale(1.2); }
                100% { transform: scale(1); }
            }

            @keyframes slideIn {
                from { transform: translateX(100%); opacity: 0; }
                to { transform: translateX(0); opacity: 1; }
            }

            .notification {
                box-shadow: 0 2px 5px rgba(0,0,0,0.2);
            }
        `;
        document.head.appendChild(style);

        // Lấy modal
        const modal = document.getElementById("buyNowModal");
        // const span = document.getElementsByClassName("close")[0];

        // Hàm hiển thị modal mua ngay
        function showBuyNowForm(productId, productName, productImage, productPrice) {
            const modal = document.getElementById('buyNowModal');
            if (!modal) {
                console.error('Modal not found');
                return;
            }

            // Cập nhật thông tin sản phẩm trong modal
            const modalImg = document.getElementById('modalProductImage');
            const modalName = document.getElementById('modalProductName');
            const modalPrice = document.getElementById('modalProductPrice');
            const quantityInput = document.getElementById('buyQuantity');

            if (modalImg) modalImg.src = productImage;
            if (modalName) modalName.textContent = productName;
            if (modalPrice) modalPrice.textContent = new Intl.NumberFormat('vi-VN', { 
                style: 'currency', 
                currency: 'VND' 
            }).format(productPrice);
            if (quantityInput) quantityInput.value = 1;

            // Lưu product ID vào modal
            modal.dataset.productId = productId;
            
            // Hiển thị modal
            modal.style.display = "block";
        }

        // // Đóng modal khi click vào nút close
        // span.onclick = function() {
        //     modal.style.display = "none";
        // }

        // // Đóng modal khi click bên ngoài modal
        // window.onclick = function(event) {
        //     if (event.target == modal) {
        //         modal.style.display = "none";
        //     }
        // }

        // Hàm tăng số lượng
        function increaseQuantity() {
            const input = document.getElementById("buyQuantity");
            input.value = parseInt(input.value) + 1;
        }

        // Hàm giảm số lượng
        function decreaseQuantity() {
            const input = document.getElementById("buyQuantity");
            if (parseInt(input.value) > 1) {
                input.value = parseInt(input.value) - 1;
            }
        }

        // Hàm xử lý khi bấm nút Mua ngay
        function proceedToCheckout() {
            const modal = document.getElementById('buyNowModal');
            if (!modal) {
                console.error('Modal element not found');
                return;
            }
            
            const productId = modal.dataset.productId;
            const quantity = document.getElementById("buyQuantity").value;
            
            if (!productId) {
                console.error('Product ID not found');
                return;
            }
            
            // Chuyển hướng đến trang checkout với thông tin sản phẩm
            window.location.href = `/checkout?product_id=${productId}&quantity=${quantity}`;
        }

    // Thêm smooth scroll cho link liên hệ
    document.querySelector('.scroll-to-footer').addEventListener('click', function(e) {
        e.preventDefault();
        
        const footer = document.getElementById('lienhe');
        const headerOffset = 80; // Chiều cao của navbar
        const elementPosition = footer.getBoundingClientRect().top;
        const offsetPosition = elementPosition + window.pageYOffset - headerOffset;

        window.scrollTo({
            top: offsetPosition,
            behavior: "smooth"
        });
    });

    // Đặt các hàm xử lý modal ở mức global
    function closeModal() {
        const modal = document.getElementById('buyNowModal');
        if (modal) {
            modal.style.display = 'none';
        }
    }

    function showBuyNowForm(productId, productName, productImage, productPrice) {
        const modal = document.getElementById('buyNowModal');
        if (!modal) return;
        
        const modalImg = document.getElementById('modalProductImage');
        const modalName = document.getElementById('modalProductName');
        const modalPrice = document.getElementById('modalProductPrice');
        const quantityInput = document.getElementById('buyQuantity');

        if (modalImg) modalImg.src = productImage;
        if (modalName) modalName.textContent = productName;
        if (modalPrice) modalPrice.textContent = new Intl.NumberFormat('vi-VN', { 
            style: 'currency', 
            currency: 'VND' 
        }).format(productPrice);
        if (quantityInput) quantityInput.value = 1;

        modal.dataset.productId = productId;
        modal.style.display = 'block';
    }

    // Thêm event listeners khi DOM đã load
    document.addEventListener('DOMContentLoaded', function() {
        // Xử lý nút close
        const closeButton = document.querySelector('.close');
        if (closeButton) {
            closeButton.onclick = closeModal;
        }

        // Xử lý click outside modal
        window.onclick = function(event) {
            const modal = document.getElementById('buyNowModal');
            if (event.target === modal) {
                closeModal();
            }
        };
    });
</script>
<!-- Modal Mua Ngay -->
    <div id="buyNowModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <div class="buy-now-form">
                <div class="product-preview">
                    <img id="modalProductImage" src="" alt="Product Image">
                    <div class="product-details">
                        <h3 id="modalProductName"></h3>
                        <p class="modal-price" id="modalProductPrice"></p>
                    </div>
                </div>
                <div class="quantity-selector">
                    <label>Số lượng:</label>
                    <div class="quantity-controls">
                        <button type="button" onclick="decreaseQuantity()">-</button>
                        <input type="number" id="buyQuantity" value="1" min="1">
                        <button type="button" onclick="increaseQuantity()">+</button>
                    </div>
                </div>
                <button class="buy-now-button" onclick="proceedToCheckout()">Mua ngay</button>
            </div>
        </div>
    </div>

<!-- Thêm CSS cho modal -->
<style>
.modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.5);
}

.modal-content {
    background-color: #fefefe;
    margin: 15% auto;
    padding: 20px;
    border-radius: 8px;
    width: 80%;
    max-width: 500px;
    position: relative;
}

.close {
    position: absolute;
    right: 20px;
    top: 10px;
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
}

.modal-header {
    margin-bottom: 20px;
}

.modal-body {
    margin-bottom: 20px;
}

.product-preview {
    text-align: center;
    margin-bottom: 20px;
}

.product-preview img {
    max-width: 200px;
    height: auto;
    margin-bottom: 10px;
}

.quantity-selector {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
}

.quantity-controls {
    display: flex;
    align-items: center;
    gap: 5px;
}

.quantity-controls button {
    padding: 5px 10px;
    border: 1px solid #ddd;
    background: #f8f9fa;
    cursor: pointer;
}

.quantity-controls input {
    width: 50px;
    text-align: center;
    padding: 5px;
}

.modal-footer {
    display: flex;
    justify-content: flex-end;
    gap: 10px;
}

.btn-cancel, .btn-confirm {
    padding: 8px 16px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}

.btn-cancel {
    background: #6c757d;
    color: white;
}

.btn-confirm {
    background: #007bff;
    color: white;
}
</style>

<!-- Thêm JavaScript cho modal -->
<script>
     // Thêm code xử lý giỏ hàng
        document.addEventListener('DOMContentLoaded', function() {
            // Lấy số lượng hiện tại trong giỏ hàng
            let currentCartCount = parseInt(document.getElementById('cart-count')?.textContent || '0');

            // Xử lý sự kiện click "Thêm vào giỏ"
            document.querySelectorAll('.add-to-cart').forEach(button => {
                button.addEventListener('click', function(e) {
                    e.preventDefault();
                    
                    const productCard = this.closest('.product-card');
                    const productId = productCard.dataset.productId;

                    // Tăng số lượng ngay lập tức trước khi gửi request
                    currentCartCount += 1;
                    updateCartCountDisplay(currentCartCount);

                    fetch(`/cart/add/${productId}`, {
                        method: 'POST',
                        headers: {
                            'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content,
                            'Content-Type': 'application/json',
                            'Accept': 'application/json'
                        },
                        credentials: 'same-origin'
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Cập nhật lại số chính xác từ server (nếu cần)
                            currentCartCount = data.cart_count;
                            updateCartCountDisplay(currentCartCount);
                            
                            // Thông báo thành công
                            showNotification('Đã thêm vào giỏ hàng!');

                            // Delay 1 giây (1000ms) trước khi reload
                            setTimeout(() => {
                                window.location.reload();
                            }, 1000);
                        } else {
                            // Nếu có lỗi, giảm lại số lưng
                            currentCartCount -= 1;
                            updateCartCountDisplay(currentCartCount);
                            showNotification(data.message || 'Có lỗi xảy ra', 'error');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        // Nếu có lỗi, giảm lại số lượng
                        currentCartCount -= 1;
                        updateCartCountDisplay(currentCartCount);
                        showNotification('Có lỗi xảy ra khi thêm vào giỏ hàng', 'error');
                    });
                });
            });

            // Hàm cập nhật hiển thị số lượng giỏ hàng
            function updateCartCountDisplay(count) {
                const cartCount = document.getElementById('cart-count');
                if (cartCount) {
                    cartCount.textContent = count;
                    // Thêm hiệu ứng
                    cartCount.classList.add('update-animation');
                    setTimeout(() => {
                        cartCount.classList.remove('update-animation');
                    }, 300);
                }
            }

            // Hàm hiển thị thông báo
            function showNotification(message, type = 'success') {
                const notification = document.createElement('div');
                notification.className = `notification ${type}`;
                notification.textContent = message;
                document.body.appendChild(notification);

                // Xóa thông báo sau 2 giây
                setTimeout(() => {
                    notification.remove();
                }, 2000);
            }
        });

        function addToCart(productId, productName, productPrice, productImage) {
            // Lấy token CSRF
            const csrfToken = document.querySelector('meta[name="csrf-token"]').content;
            
            fetch('/cart/add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-Token': csrfToken
                },
                body: JSON.stringify({
                    id: productId,
                    name: productName,
                    price: productPrice,
                    image_path: productImage
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Kiểm tra sự tồn tại của phần tử trước khi cập nhật
                    const cartCount = document.querySelector('.cart-count');
                    if (cartCount) {
                        cartCount.textContent = data.cart_count;
                        cartCount.classList.add('pulse');
                        setTimeout(() => cartCount.classList.remove('pulse'), 500);
                    }
                    
                    showNotification('Đã thêm vào giỏ hàng!', 'success');
                } else {
                    showNotification(data.message || 'Có lỗi xảy ra', 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showNotification('Có lỗi xảy ra khi thêm vào giỏ hàng', 'error');
            });
        }

        function showNotification(message, type = 'success') {
            const notification = document.createElement('div');
            notification.className = `notification ${type}`;
            notification.textContent = message;
            
            // Style cho notification
            Object.assign(notification.style, {
                position: 'fixed',
                top: '20px',
                right: '20px',
                padding: '15px 25px',
                borderRadius: '5px',
                backgroundColor: type === 'success' ? '#4CAF50' : '#f44336',
                color: 'white',
                zIndex: '1000',
                animation: 'slideIn 0.5s ease-out'
            });
            
            document.body.appendChild(notification);
            
            setTimeout(() => notification.remove(), 3000);
        }

        // Thêm CSS cho animation
        const style = document.createElement('style');
        style.textContent = `
            .pulse {
                animation: pulse 0.5s ease-in-out;
            }

            @keyframes pulse {
                0% { transform: scale(1); }
                50% { transform: scale(1.2); }
                100% { transform: scale(1); }
            }

            @keyframes slideIn {
                from { transform: translateX(100%); opacity: 0; }
                to { transform: translateX(0); opacity: 1; }
            }

            .notification {
                box-shadow: 0 2px 5px rgba(0,0,0,0.2);
            }
        `;
        document.head.appendChild(style);

        // Lấy modal
        const modal = document.getElementById("buyNowModal");
        // const span = document.getElementsByClassName("close")[0];

        // Hàm hiển thị modal mua ngay
        function showBuyNowForm(productId, productName, productImage, productPrice) {
            const modal = document.getElementById("buyNowModal");
            document.getElementById("modalProductImage").src = productImage;
            document.getElementById("modalProductName").textContent = productName;
            document.getElementById("modalProductPrice").textContent = 
            new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(productPrice);
            document.getElementById("buyQuantity").value = 1;
            modal.dataset.productId = productId;
            modal.style.display = "block";
        }

        // Đóng modal
        document.querySelector('.close').onclick = function() {
            document.getElementById('buyNowModal').style.display = "none";
        }

        // Đóng modal khi click ngoài
        window.onclick = function(event) {
            if (event.target == document.getElementById('buyNowModal')) {
            document.getElementById('buyNowModal').style.display = "none";
            }
        }

        // Hàm tăng số lượng
        function increaseQuantity() {
            const input = document.getElementById("buyQuantity");
            input.value = parseInt(input.value) + 1;
        }

        // Hàm giảm số lượng
        function decreaseQuantity() {
            const input = document.getElementById("buyQuantity");
            if (parseInt(input.value) > 1) {
                input.value = parseInt(input.value) - 1;
            }
        }

        // Hàm xử lý khi bấm nút Mua ngay
        function proceedToCheckout() {
            const modal = document.getElementById('buyNowModal');
            if (!modal) {
                console.error('Modal element not found');
                return;
            }
            
            const productId = modal.dataset.productId;
            const quantity = document.getElementById("buyQuantity").value;
            
            if (!productId) {
                console.error('Product ID not found');
                return;
            }
            
            // Chuyển hướng đến trang checkout với thông tin sản phẩm
            window.location.href = `/checkout?product_id=${productId}&quantity=${quantity}`;
        }

        // Thêm event listener cho nút close
        const closeBtn = document.querySelector('.close');
        const modal = document.getElementById('buyNowModal');

        if (closeBtn && modal) {
            closeBtn.addEventListener('click', function() {
                modal.style.display = "none";
            });

            // Đóng modal khi click bên ngoài
            window.addEventListener('click', function(event) {
                if (event.target == modal) {
                    modal.style.display = "none";
                }
            });
        }
});
</script>
</body>
</html> 